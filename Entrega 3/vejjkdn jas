insertClient :: IConnection c => Client -> c -> IO ()
insertClient client conn = do
  run
    conn
    "INSERT INTO tb_client VALUES (?,?,?)"
    [ toSql $ idClient client,
      toSql $ nameClient client,
      toSql $ cnhClient client
    ]
  commit conn

--  Client Update Client (Atualizar)

updateClient :: IConnection c => Client -> c -> IO ()
updateClient client conn = do
  run
    conn
    "UPDATE tb_client SET c_id = ?, c_name = ?, c_cnh = ? WHERE c_id = ?"
    [ toSql $ idClient client,
      toSql $ nameClient client,
      toSql $ cnhClient client,
      toSql $ idClient client
    ]
  commit conn

-- Client Retrive (Recuperar)

retriveClients :: IConnection c => c -> IO [Client]
retriveClients conn = do
  let sql = "SELECT c_id, c_name, c_cnh FROM tb_client"
  rows <- quickQuery conn sql []
  return $ map clientConvrow rows

--  Client Retrive By Id (Recuperar por ID)

retriveClientId :: IConnection c => c -> Integer -> IO [Client]
retriveClientId conn wantedid = do
  res <-
    quickQuery
      conn
      "SELECT c_id, c_name, c_cnh FROM tb_client WHERE c_id = ? ORDER BY c_id"
      [toSql wantedid]
  return $ map clientConvrow res

retriveClientName :: IConnection c => c -> String -> IO [Client]
retriveClientName conn wantedname = do
  res <-
    quickQuery
      conn
      "SELECT c_id, c_name, c_cnh FROM tb_client WHERE c_name = ? ORDER BY c_id"
      [toSql wantedname]
  return $ map clientConvrow res

retriveClientCnh :: IConnection c => c -> String -> IO [Client]
retriveClientCnh conn wantedCnh = do
  res <-
    quickQuery
      conn
      "SELECT c_id, c_name, c_cnh FROM tb_client WHERE c_cnh = ? ORDER BY c_id"
      [toSql wantedCnh]
  return $ map clientConvrow res

--  Client Delete By Id (Deletar por Id)

removeClient :: IConnection c => c -> Integer -> IO ()
removeClient conn wantedid = do
  run
    conn
    "DELETE FROM tb_client WHERE c_id = ?"
    [toSql wantedid]
  commit conn

-- Parses Client from SQL (converte os dados do banco para HASKELL)
clientConvrow :: [SqlValue] -> Client
clientConvrow [cid, cname, ccnh] =
  Client
    { idClient = fromSql cid,
      nameClient = fromSql cname,
      cnhClient = fromSql ccnh
    }